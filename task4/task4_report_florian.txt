We applied the LinUCB algorithm with disjoint linear models. The algorithm works as follows (based on the lecture notes):
In each round the "recommend method" receives an action/article set and a user feature vector. For each action an upper confidence bound is computed by linearly weighting the user feature vector and adding some "saftey cushion". That means the true weight vector associated with each action is contained in a confidence ellipsoid. We recommend the action/article which maximes its upper confidence bound on the user feature vector.
If the chosen action/article matches the line in the log-file for that user feature vector, the "update method" receives a reward equals to 1 if the user clicked on the article and 0 if the user did not click on the article and -1 if no match occured. The LinUCB running statistics are updated based on the reward and user feature vector. Note: The reward was scaled until a good quantization error was achieved to compensate for misses in the update method. 
The alpha parameter of the LinUCB algorithm is set to 1 + sqrt(ln(2/delta)/2) where delta was set to 0.06. 
